# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: mysql
#   name: mysql-deployment
# spec:
#   selector:
#     matchLabels:
#       app: mysql
#   template:
#     metadata:
#       labels:
#         app: mysql
#     spec:
#       containers:  
#       - image: pradeep34946/mysql:v1
#         name: mysql
#         env:
#         - name: MYSQL_ROOT_PASSWORD
#           value: password

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: mysql
#   name: mysql-service
# spec:
#   ports:
#     - name: http
#       port: 3306
#       targetPort: 3306
#       protocol: TCP
#   selector:
#     app: mysql
#   type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend-deployment
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:  
      - image: pradeep34946/backend:v3
        name: backend


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend-service
spec:
  ports:
    - name: http
      port: 5000
      targetPort: 5000
      protocol: TCP
  selector:
    app: backend
  type: ClusterIP

---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: frontend
#   name: frontend-deployment
# spec:
#   selector:
#     matchLabels:
#       app: frontend
#   template:
#     metadata:
#       labels:
#         app: frontend
#     spec:
#       containers:  
#          - image: pradeep34946/frontend:v6
#            name: frontend
#            env: 
#               - name: REACT_APP_API_URL
#                 value: http://k3d.devpracon.tech:5000/api/
#               - name: REACT_APP_PHOTOS_URL
#                 value: http://k3d.devpracon.tech:5000/Photos/

---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: frontend
#   name: frontend-service
# spec:
#   ports:
#     - name: http
#       port: 3000
#       targetPort: 3000
#       protocol: TCP
#   selector:
#     app: frontend
#   type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          # - path: /
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: frontend-service
          #       port:
          #         number: 3000

          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 5000